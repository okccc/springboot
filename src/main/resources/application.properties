# application.properties\u662Fspringboot\u4E3A\u6240\u6709\u6846\u67B6\u63D0\u4F9B\u914D\u7F6E\u53C2\u6570\u7684,\u4E3A\u4E86\u4FDD\u8BC1key\u4E0D\u91CD\u590D\u91C7\u7528\u591A\u5C42\u6B21\u547D\u540D
# \u81EA\u5B9A\u4E49\u76F8\u5173\u914D\u7F6E\u9879\u4FEE\u6539\u542F\u52A8\u7A0B\u5E8F\u7684\u9ED8\u8BA4\u53C2\u6570,key\u662F\u56FA\u5B9A\u7684,\u8F93\u5165\u5173\u952E\u5B57\u4F1A\u6709\u63D0\u793A,\u4EE3\u7801\u4E2D\u53EF\u901A\u8FC7@Value\u6CE8\u89E3\u83B7\u53D6
# server.port\u3001server.servlet.context-path\u8001\u957F\u4E00\u4E32\u5199\u8D77\u6765\u5F88\u9EBB\u70E6,\u6240\u4EE5\u63A8\u8350\u4F7F\u7528.yml\u683C\u5F0F\u7684\u914D\u7F6E\u6587\u4EF6

# \u5F00\u542F\u8C03\u8BD5\u6A21\u5F0F,\u4F1A\u5728\u63A7\u5236\u53F0\u8BE6\u7EC6\u6253\u5370\u81EA\u52A8\u914D\u7F6E\u7C7B\u662F\u5426\u751F\u6548(Positive/Negative),\u7C7B\u4F3Cmvn dependency:analyze\u5206\u6790\u5DE5\u7A0B\u4F9D\u8D56
debug=true

# \u81EA\u5B9A\u4E49banner,\u901A\u5E38\u653E\u516C\u53F8logo
spring.banner.location=classpath:banner.txt
# banner\u6A21\u5F0F\uFF1Aconsole/log/off
spring.main.banner-mode=console

# \u751F\u6548\u73AF\u5883 = \u9ED8\u8BA4\u73AF\u5883 + \u5305\u542B\u73AF\u5883 + \u6FC0\u6D3B\u73AF\u5883
# \u9ED8\u8BA4\u73AF\u5883\uFF1A\u4E0D\u6807\u8BC6@Profile\u7684\u7EC4\u4EF6\u6C38\u8FDC\u751F\u6548
spring.profiles.default=default
# \u5305\u542B\u73AF\u5883\uFF1A\u4E0D\u7BA1\u662F\u5426\u6FC0\u6D3B\u90FD\u4F1A\u751F\u6548,\u901A\u5E38\u653Elog/mybatis\u7B49\u57FA\u7840\u914D\u7F6E
spring.profiles.include=prod
# \u6FC0\u6D3B\u73AF\u5883\uFF1A\u901A\u5E38\u653Edb/redis/mq\u7B49\u9700\u8981\u52A8\u6001\u5207\u6362\u7684
spring.profiles.active=dev
# \u73AF\u5883\u5206\u7EC4
spring.profiles.group.dev=db,mq
spring.profiles.group.dev[0]=db
spring.profiles.group.dev[1]=mq

# logging\u914D\u7F6E(\u63A8\u8350\u4F7F\u7528logback-spring.xml)
# \u4FEE\u6539\u65F6\u95F4\u683C\u5F0F
logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss:SSS
# \u65E5\u5FD7\u5206\u7EC4
logging.group.g01=com.okccc.controller, com.okccc.service
logging.group.g02=com.okccc.mapper
# \u65E5\u5FD7\u7EA7\u522B
logging.level.root=info
logging.level.web=info
logging.level.sql=debug
logging.level.g01=info
logging.level.g02=debug
# \u8F93\u51FA\u5230\u6587\u4EF6
logging.file.name=/tmp/app.log
# \u6587\u4EF6\u5F52\u6863\u4E0E\u6EDA\u52A8\u5207\u5272
logging.logback.rollingpolicy.file-name-pattern=app.%d{yyyy-MM-dd}.%i.gz
logging.logback.rollingpolicy.max-file-size=128MB
logging.logback.rollingpolicy.max-history=7

# server\u914D\u7F6E(org.springframework.boot.autoconfigure.web.ServerProperties)
# \u7AEF\u53E3\u53F7
server.port=8080
# \u9879\u76EE\u6839\u8DEF\u5F84
server.servlet.context-path=/
# \u5F53\u53D1\u751F\u9519\u8BEF\u65F6\u4F1A\u5C06\u9519\u8BEF\u8BF7\u6C42\u8F6C\u53D1\u7ED9/error,\u4E5F\u5C31\u662FSpringBoot\u7684\u9ED8\u8BA4\u767D\u9875 http://localhost:8080/error
server.error.path=/error

# spring.web\u914D\u7F6E(org.springframework.boot.autoconfigure.web.WebProperties)
# \u8F93\u5165spring.web.\u53D1\u73B0\u63D0\u793A\u53EA\u6709\u9759\u6001\u8D44\u6E90\u548C\u56FD\u9645\u5316\u4E24\u9879
# \u5F00\u542F\u9759\u6001\u8D44\u6E90\u6620\u5C04\u89C4\u5219
spring.web.resources.add-mappings=true
# \u7F13\u5B58\u5468\u671F(\u79D2)
spring.web.resources.cache.cachecontrol.max-age=3600
# \u5171\u4EAB\u7F13\u5B58
spring.web.resources.cache.cachecontrol.cache-public=true
# \u548C\u670D\u52A1\u5668\u6BD4\u5BF9\u8D44\u6E90\u7684\u6700\u540E\u4E00\u6B21\u4FEE\u6539\u65F6\u95F4,\u5982\u679C\u6CA1\u53D8\u5C31\u76F4\u63A5\u4F7F\u7528\u672C\u5730\u7F13\u5B58,\u8282\u7701\u670D\u52A1\u5668\u8D44\u6E90,F12\u54CD\u5E94\u72B6\u6001\u7801304\u8868\u793A\u4F7F\u7528\u4E86\u7F13\u5B58
spring.web.resources.cache.use-last-modified=true

# spring.mvc\u914D\u7F6E(org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)
# webjars\u8DEF\u5F84\u524D\u7F00
spring.mvc.webjars-path-pattern=/webjars/**
# \u9759\u6001\u8D44\u6E90\u8BBF\u95EE\u8DEF\u5F84\u524D\u7F00
spring.mvc.static-path-pattern=/**
# \u8DEF\u5F84\u5339\u914D\u7B56\u7565\uFF1A\u8001\u7248ant_path_matcher\u3001\u65B0\u7248path_pattern_parser(\u9ED8\u8BA4)
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
# \u57FA\u4E8E\u8BF7\u6C42\u53C2\u6570\u7684\u5185\u5BB9\u534F\u5546
spring.mvc.contentnegotiation.favor-parameter=true
# \u5185\u5BB9\u534F\u5546\u53C2\u6570\u540D\u9ED8\u8BA4format,\u4E5F\u53EF\u4EE5\u624B\u52A8\u6307\u5B9A,\u6BD4\u5982\u6539\u6210type
spring.mvc.contentnegotiation.parameter-name=format
# \u5185\u5BB9\u534F\u5546\u589E\u52A0\u4E00\u79CD\u65B0\u7684\u5A92\u4F53\u7C7B\u578Byaml,\u914D\u7F6E\u9879\u70B9\u4E0D\u52A8\u8BF4\u660E\u662F\u81EA\u5B9A\u4E49\u7684
spring.mvc.contentnegotiation.media-types.yaml=text/yaml

# thymeleaf\u914D\u7F6E(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties)
# \u524D\u7F00\u548C\u540E\u7F00
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
# \u5F00\u53D1\u671F\u95F4\u5173\u95ED\u7F13\u5B58,\u9875\u9762\u4E00\u6539\u5C31\u80FD\u770B\u5230\u6548\u679C,\u4E0A\u7EBF\u540E\u518D\u5F00\u542F
spring.thymeleaf.cache=false
# \u6E32\u67D3\u6A21\u677F\u4E4B\u524D\u4F1A\u5148\u68C0\u67E5\u662F\u5426\u5B58\u5728,\u5173\u95ED\u53EF\u4EE5\u63D0\u5347\u8FD0\u884C\u901F\u5EA6
spring.thymeleaf.check-template=false

# \u56FD\u9645\u5316\u914D\u7F6E(org.springframework.boot.autoconfigure.context.MessageSourceProperties)
spring.messages.basename=messages
spring.messages.encoding=UTF-8

# \u6570\u636E\u6E90\u914D\u7F6E(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties)
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/ssm?characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true&allowMultiQueries=true
#spring.datasource.username=root
#spring.datasource.password=root@123
# \u8FDE\u63A5\u6C60\u7C7B\u578B
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# \u8FDE\u63A5\u4FE1\u606F
spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://localhost:3306/ssm?characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true&allowMultiQueries=true
spring.datasource.druid.username=root
spring.datasource.druid.password=root@123
# \u521D\u59CB\u5316\u65F6\u8FDE\u63A5\u6570,\u9ED8\u8BA40
spring.datasource.druid.initial-size=5
# \u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5\u6570,\u9ED8\u8BA40
spring.datasource.druid.min-idle=5
# \u6700\u5927\u6D3B\u8DC3\u8FDE\u63A5\u6570,\u9ED8\u8BA48
spring.datasource.druid.max-active=20
# \u6CA1\u6709\u7A7A\u95F2\u8FDE\u63A5\u65F6\u7B49\u5F85\u7684\u8D85\u65F6\u65F6\u95F4(ms),\u9ED8\u8BA4-1\u8868\u793A\u4E00\u76F4\u7B49\u5F85
spring.datasource.druid.max-wait=60000
# \u6821\u9A8C\u8FDE\u63A5\u662F\u5426\u6709\u6548\u7684sql
spring.datasource.druid.validation-query=select 1
# \u501F\u51FA\u8FDE\u63A5\u65F6\u662F\u5426\u6821\u9A8C(\u4F1A\u964D\u4F4E\u6027\u80FD)
spring.datasource.druid.test-on-borrow=false
# \u5F52\u8FD8\u8FDE\u63A5\u65F6\u662F\u5426\u6821\u9A8C(\u4F1A\u964D\u4F4E\u6027\u80FD)
spring.datasource.druid.test-on-return=false
# \u8FDE\u63A5\u7A7A\u95F2\u65F6\u662F\u5426\u6821\u9A8C(\u4E0D\u5F71\u54CD\u6027\u80FD,\u4FDD\u8BC1\u5B89\u5168\u6027)
spring.datasource.druid.test-while-idle=true
# \u7A7A\u95F2\u8FDE\u63A5\u56DE\u6536\u5668\u6BCF\u969460\u79D2(\u9ED8\u8BA4)\u8FD0\u884C\u4E00\u6B21,\u662FtestWhileIdle\u7684\u5224\u65AD\u4F9D\u636E,\u8981\u5C0F\u4E8Emysql\u7684wait_timeout
spring.datasource.druid.time-between-eviction-runs-millis=60000
# \u7A7A\u95F2\u8FDE\u63A5\u8D85\u8FC730\u5206\u949F(\u9ED8\u8BA4)\u5C31\u88AB\u56DE\u6536
spring.datasource.druid.min-evictable-idle-time-millis=30000
# \u662F\u5426\u7F13\u5B58PreparedStatement\u4E5F\u5C31\u662FPSCache,\u5BF9\u652F\u6301\u6E38\u6807\u7684\u6570\u636E\u5E93\u6027\u80FD\u63D0\u5347\u5DE8\u5927\u6BD4\u5982oracle,\u5728mysql\u4E0B\u5EFA\u8BAE\u5173\u95ED
spring.datasource.druid.pool-prepared-statements=false
# \u8981\u542F\u7528PSCache\u5FC5\u987B\u914D\u7F6E\u5927\u4E8E0,PoolPreparedStatements\u4F1A\u81EA\u52A8\u89E6\u53D1\u4FEE\u6539\u4E3Atrue,\u5728Druid\u4E2D\u4E0D\u5B58\u5728Oracle\u4E0BPSCache\u5360\u7528\u5185\u5B58\u8FC7\u591A\u7684\u95EE\u9898,\u53EF\u4EE5\u628A\u8FD9\u4E2A\u6570\u503C\u8C03\u5927\u81F3100
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=-1
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
spring.datasource.druid.use-global-data-source-stat=true

# mybatis\u914D\u7F6E(org.mybatis.spring.boot.autoconfigure.MybatisProperties)
# \u65E5\u5FD7\u5B9E\u73B0,SLF4J/LOG4J2/STDOUT_LOGGING
mybatis.configuration.log-impl=org.apache.ibatis.logging.slf4j.Slf4jImpl
# \u5C06\u4E0B\u5212\u7EBF\u6620\u5C04\u6210\u9A7C\u5CF0\u89C4\u5219
mybatis.configuration.map-underscore-to-camel-case=true
# \u8BBE\u7F6E\u6620\u5C04\u8303\u56F4,NONE/PARTIAL/FULL
mybatis.configuration.auto-mapping-behavior=full
# \u5F00\u542F\u5EF6\u8FDF\u52A0\u8F7D,\u9700\u8981\u5565\u5C31\u67E5\u5565\u800C\u4E0D\u662F\u4E00\u6B21\u6027\u5168\u90E8\u67E5\u51FA\u6765,\u53EF\u4EE5\u5BF9\u6BD4DEBUG\u4FE1\u606F\u6267\u884C\u7684sql\u6761\u6570
mybatis.configuration.lazy-loading-enabled=true
# \u5F00\u542F\u7F13\u5B58,\u53EF\u4EE5\u5BF9\u6BD4DEBUG\u4FE1\u606F\u6267\u884C\u7684sql\u6B21\u6570
mybatis.configuration.cache-enabled=true
# \u6307\u5B9A\u5305\u4E0B\u6240\u6709\u7C7B\u578B\u90FD\u62E5\u6709\u9ED8\u8BA4\u522B\u540D,\u5373\u7C7B\u540D\u672C\u8EAB\u4E14\u4E0D\u533A\u5206\u5927\u5C0F\u5199
mybatis.type-aliases-package=com.okccc.bean
# \u544A\u8BC9mybatis\u6BCF\u4E2AMapper\u63A5\u53E3\u5BF9\u5E94\u7684\u7684xml\u6587\u4EF6\u5728\u54EA\u91CC
mybatis.mapper-locations=classpath:/mapper/*.xml

# redis\u914D\u7F6E(org.springframework.boot.autoconfigure.data.redis.RedisProperties)
spring.data.redis.host=localhost
spring.data.redis.port=6379
# \u914D\u7F6Elettuce\u5BA2\u6237\u7AEF(\u9ED8\u8BA4)
#spring.data.redis.client-type=lettuce
#spring.data.redis.lettuce.pool.enabled=true
#spring.data.redis.lettuce.pool.max-active=8
# \u914D\u7F6Ejedis\u5BA2\u6237\u7AEF(\u9700\u624B\u52A8\u5207\u6362)
spring.data.redis.client-type=jedis
spring.data.redis.jedis.pool.enabled=true
spring.data.redis.jedis.pool.max-active=8

# kafka\u914D\u7F6E(org.springframework.boot.autoconfigure.kafka.KafkaProperties)
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
##spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer